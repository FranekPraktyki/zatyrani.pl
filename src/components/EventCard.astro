---
interface Props {
  title: string;
  date: string;
  location: string;
  description: string;
  mainLink: string;
  registrationLink: string;
  image?: string;
  month?: string;
}

const { title, date, location, description, mainLink, registrationLink, image } = Astro.props;
const fallbackImage = 'event_fallback.webp'; // Update with your fallback image path or use a random SVG
---

<article class="bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow flex flex-col">
  <div class="p-6 flex-grow space-y-4">
    <div class="flex items-center space-x-4">
      <img hidden
        id="event-image"
        src={image || fallbackImage}
        alt={title}
        class="w-16 h-16 object-contain"
      />
      <h3 class="text-xl font-bold">{title}</h3>
    </div>
    <div class="space-y-2 text-gray-600 mt-4">
      <p class="font-bold">{date}
        <span class="inline-block px-2 py-1 text-xs font-semibold text-green-600 bg-green-100 rounded-full">
          {location}
        </span>
      </p>

      <hr class="my-4 border-t border-gray-300" />
      <p>{description}</p>
    </div>
  </div>
  <div class="flex justify-between items-end p-6">
    {mainLink && (
      <a
        href={mainLink}
        target="_blank"
        rel="noopener noreferrer"
        class="text-sm text-blue-500 hover:text-blue-700"
      >
        WiÄ™cej info
      </a>
    )}
    {registrationLink && (
      <a
        href={registrationLink}
        target="_blank"
        rel="noopener noreferrer"
        class="text-sm text-green-500 hover:text-green-700"
      >
        Rejestracja
      </a>
    )}
  </div>
</article>
