---
const locations = [
  { name: 'Nieborowice – PPK', link: 'https://maps.app.goo.gl/cUnjGVWuHfnJDQTL8' },
  { name: 'Nieborowice – Krzyż', link: 'https://maps.app.goo.gl/4t3qjRxQpny7Ln6KA' },
  { name: 'Wilcza – Cmentarz', link: 'https://maps.app.goo.gl/NwiX62pvY3kmyV3M8' },
  { name: 'Ochojec – Azyl Zatyranych', link: 'https://maps.app.goo.gl/VdEFVwTmG6TRd4M96' },
  { name: 'Stanica – Stacja', link: 'https://maps.app.goo.gl/LGKq1drxyXzfK9bi7' },
  { name: 'Leboszowice – Szwedownik', link: 'https://maps.app.goo.gl/UA4atBHW9mkCv9A1A' },
  { name: 'Pilchowice – Damrota', link: 'https://maps.app.goo.gl/XnmUCsTWhwotmXr98' },
  { name: 'Pilchowice – Wielopole', link: 'https://maps.app.goo.gl/fTGv37UHmFpk3zL57' },
];
---

<form id="trainingForm" autocomplete="off" class="max-w-2xl mx-auto p-4" method="POST">
  <div class="space-y-4">
    <!-- Rodzaj treningu -->
    <div>
      <label class="block text-sm font-medium text-gray-700">
        <strong>Rodzaj treningu</strong> <span class="text-red-600">*</span>
      </label>
      <div class="mt-1 flex space-x-4">
        <label class="inline-flex items-center">
          <input type="radio" name="type" value="bieg" checked required class="form-radio text-purple-600" />
          <span class="ml-2 text-sm text-gray-500">Bieg</span>
        </label>
        <label class="inline-flex items-center">
          <input type="radio" name="type" value="nordic walking" required class="form-radio text-purple-600" />
          <span class="ml-2 text-sm text-gray-500">Nordic Walking</span>
        </label>
      </div>
    </div>

    <!-- Data i czas -->
    <div>
      <label for="datetime" class="block text-sm font-medium text-gray-700">
        <strong>Data i czas</strong> <span class="text-red-600">*</span>
      </label>
      <input
        type="datetime-local"
        id="datetime"
        name="datetime"
        required
        class="mt-1 block w-full rounded-md border-purple-300 border-2 shadow-sm focus:border-purple-500 focus:ring-purple-500 text-gray-500"
      />
    </div>

    <!-- Lokalizacja -->
    <div>
      <label for="location" class="block text-sm font-medium text-gray-700">
        <strong>Lokalizacja</strong> <span class="text-red-600">*</span>
      </label>
      <select
        id="location"
        name="location"
        required
        class="mt-1 block w-full rounded-md border-purple-300 border-2 shadow-sm focus:border-purple-500 focus:ring-purple-500 text-gray-500"
      >
        <option value="" disabled selected class="text-gray-500">Wybierz lokalizację</option>
        {locations.map(loc => (
          <option value={loc.name} data-link={loc.link}>{loc.name}</option>
        ))}
      </select>
      <input type="hidden" name="locationLink" id="locationLink" />
    </div>

    <!-- Komentarz -->
    <div>
      <label for="comment" class="block text-sm font-medium text-gray-700">
        <strong>Dodatkowy komentarz</strong>
      </label>
      <textarea
        id="comment"
        name="comment"
        rows="3"
        placeholder="Opcjonalny opis lub uwagi…"
        class="mt-1 block w-full rounded-md border-purple-300 border-2 shadow-sm focus:border-purple-500 focus:ring-purple-500 placeholder-gray-500 text-gray-500"
      ></textarea>
    </div>

    <!-- Numer kontaktowy -->
    <div>
      <label for="phone" class="block text-sm font-medium text-gray-700">
        <strong>Numer kontaktowy prowadzącego</strong> <span class="text-red-600">*</span>
      </label>
      <input
        type="tel"
        id="phone"
        name="phone"
        autocomplete="off"
        required
        pattern="\\+?\\d{9,15}"
        placeholder="+48 600 700 800"
        class="mt-1 block w-full rounded-md border-purple-300 border-2 shadow-sm focus:border-purple-500 focus:ring-purple-500 placeholder-gray-500 text-gray-500"
      />
    </div>

    <!-- Planowany dystans -->
    <div>
      <label for="distance" class="block text-sm font-medium text-gray-700">
        <strong>Planowany dystans (km)</strong> <span class="text-red-600">*</span>
      </label>
      <input
        type="number"
        id="distance"
        name="distance"
        min="1"
        max="50"
        autocomplete="off"
        required
        placeholder="np. 10"
        class="mt-1 block w-full rounded-md border-purple-300 border-2 shadow-sm focus:border-purple-500 focus:ring-purple-500 placeholder-gray-500 text-gray-500"
      />
    </div>

    <!-- Planowane tempo -->
    <div>
      <label for="pace" class="block text-sm font-medium text-gray-700">
        <strong>Planowane tempo (min/km)</strong> <span class="text-red-600">*</span>
      </label>
      <input
        type="number"
        id="pace"
        name="pace"
        min="3"
        max="10"
        step="1"
        autocomplete="off"
        required
        placeholder="np. 5"
        class="mt-1 block w-full rounded-md border-purple-300 border-2 shadow-sm focus:border-purple-500 focus:ring-purple-500 placeholder-gray-500 text-gray-500"
      />
    </div>

    <!-- Submit -->
    <button
      type="submit"
      class="w-full bg-purple-600 text-white px-4 py-2 rounded-md hover:bg-purple-700 disabled:opacity-50 disabled:cursor-not-allowed"
    >
      Dodaj trening
    </button>
  </div>
</form>

<script type="module" client:load>
  const form = document.getElementById('trainingForm');
  const submitBtn = form.querySelector('button[type="submit"]');
  const select = document.getElementById('location');
  const linkInput = document.getElementById('locationLink');

  // reset and populate link on load
  form.reset();
  select.dispatchEvent(new Event('change'));

  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    if (!form.checkValidity()) {
      form.reportValidity();
      return;
    }
    submitBtn.disabled = true;

    // build data
    const formData = new FormData(form);
    linkInput.value && formData.set('locationLink', linkInput.value);
    const data = Object.fromEntries(formData.entries());
    
    try {
      const res = await fetch('/api/add-training', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(data),
      });
      if (!res.ok) throw new Error('Server error');

      const msg = document.createElement('div');
      msg.textContent = 'Trening został dodany!';
      msg.className = 'p-3 bg-green-100 text-green-800 rounded-md mb-4';
      form.prepend(msg);

      form.reset();
      select.dispatchEvent(new Event('change'));
    } catch (err) {
      const msg = document.createElement('div');
      msg.textContent = 'Wystąpił błąd. Spróbuj ponownie.';
      msg.className = 'p-3 bg-red-100 text-red-800 rounded-md mb-4';
      form.prepend(msg);
    } finally {
      submitBtn.disabled = false;
    }
  });
</script>